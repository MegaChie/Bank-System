// <auto-generated />
using System;
using Bank_System.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bank_System.Migrations
{
    [DbContext(typeof(BankingContext))]
    [Migration("20241225121704_AddTransferFieldsToTransaction")]
    partial class AddTransferFieldsToTransaction
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("Bank_System.Models.Account", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AccountNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("AccountType")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Balance")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Created")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Accounts");

                    b.HasDiscriminator<string>("AccountType").HasValue("Account");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Bank_System.Models.Transaction", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ReceiverAccountID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("SenderAccountID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.Property<string>("TransactionType")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.HasIndex("ReceiverAccountID");

                    b.HasIndex("SenderAccountID");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("Bank_System.Models.CheckingAccount", b =>
                {
                    b.HasBaseType("Bank_System.Models.Account");

                    b.Property<decimal>("Overdraft")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("Checking");
                });

            modelBuilder.Entity("Bank_System.Models.SavingsAccount", b =>
                {
                    b.HasBaseType("Bank_System.Models.Account");

                    b.Property<decimal>("Intrest")
                        .HasColumnType("TEXT");

                    b.HasDiscriminator().HasValue("Savings");
                });

            modelBuilder.Entity("Bank_System.Models.Transaction", b =>
                {
                    b.HasOne("Bank_System.Models.Account", "ReceiverAccount")
                        .WithMany()
                        .HasForeignKey("ReceiverAccountID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Bank_System.Models.Account", "SenderAccount")
                        .WithMany()
                        .HasForeignKey("SenderAccountID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ReceiverAccount");

                    b.Navigation("SenderAccount");
                });
#pragma warning restore 612, 618
        }
    }
}
